<Activity mc:Ignorable="sap sap2010 sads" x:Class="isQueueItem"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:njl="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:ss="clr-namespace:System.Security;assembly=mscorlib"
 xmlns:ssa="clr-namespace:System.Security.Authentication;assembly=System"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_TransactionItem" Type="InArgument(ui:QueueItem)" />
    <x:Property Name="io_SystemReserved" Type="InOutArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="io_Config" Type="InOutArgument(scg:Dictionary(x:String, x:Object))" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>isQueueItem_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>UiPath.Credentials.Activities</x:String>
      <x:String>UiPath.Database.Activities</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.CSV.Activities</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.CSV</x:String>
      <x:String>UiPath.Checkpoint.Activities</x:String>
      <x:String>UiPath.DataTable.Activities</x:String>
      <x:String>UiPath.Dialog.Activities</x:String>
      <x:String>UiPath.FileSystem.Activities</x:String>
      <x:String>UiPath.Framework.Activities</x:String>
      <x:String>UiPath.PowerShell.Activities</x:String>
      <x:String>UiPath.RegEx.Activities</x:String>
      <x:String>UiPath.FTP.Activities</x:String>
      <x:String>UiPath.Mail.Activities</x:String>
      <x:String>UiPath.Mail.Exchange.Activities</x:String>
      <x:String>UiPath.Mail.IMAP.Activities</x:String>
      <x:String>UiPath.Mail.Outlook.Activities</x:String>
      <x:String>UiPath.Mail.POP3.Activities</x:String>
      <x:String>UiPath.Mail.SMTP.Activities</x:String>
      <x:String>UiPath.PDF.Activities</x:String>
      <x:String>UiPath.XPS.Activities</x:String>
      <x:String>UiPath.Enterprise.Activities.Assets</x:String>
      <x:String>UiPath.Enterprise.Activities.Queues</x:String>
      <x:String>UiPath.Enterprise.Activities</x:String>
      <x:String>UiPath.Web</x:String>
      <x:String>UiPath.Web.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>Newtonsoft.Json</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Core</AssemblyReference>
      <AssemblyReference>UiPath.Core.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Credentials.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Database.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Framework.Activities</AssemblyReference>
      <AssemblyReference>UiPath.FTP.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.PDF.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Enterprise.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Web</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="This workflow atempts to connect to the Orchestrator server and read the number of retries. This is necesarry for correct logging." DisplayName="GetQueueRetries" sap2010:WorkflowViewState.IdRef="Sequence_304">
    <If Condition="[in_TransactionItem isNot Nothing AndAlso (in_TransactionItem.GetType is GetType(Uipath.Core.QueueItem))]" DisplayName="If TransactionItem is a QueueItem" sap2010:WorkflowViewState.IdRef="If_49">
      <If.Then>
        <Sequence DisplayName="We are working with a queue" sap2010:WorkflowViewState.IdRef="Sequence_305">
          <Assign DisplayName="Is a QueueItem" sap2010:WorkflowViewState.IdRef="Assign_121">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Object">[io_SystemReserved.Item("isQueueItem")]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Object">[true]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign DisplayName="Get RetryNumber from Item" sap2010:WorkflowViewState.IdRef="Assign_120">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Object">[io_SystemReserved.Item("RetryNumber")]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Object">[in_TransactionItem.RetryNo]</InArgument>
            </Assign.Value>
          </Assign>
          <If sap2010:Annotation.AnnotationText="Try to find information about the transaction we are processing by contacting Orchestrator server and requesting MaxRetryNumber" Condition="[cint(io_SystemReserved.Item(&quot;TransactionNumber&quot;)) = 1]" DisplayName="If first Transaction" sap2010:WorkflowViewState.IdRef="If_50">
            <If.Then>
              <TryCatch DisplayName="Try to obtain information about he queue. " sap2010:WorkflowViewState.IdRef="TryCatch_1">
                <TryCatch.Try>
                  <Sequence DisplayName="Obtain Information about Queue" sap2010:WorkflowViewState.IdRef="Sequence_302">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="x:String" Name="token" />
                      <Variable x:TypeArguments="njl:JObject" Name="jsonQueueProcessingStatus" />
                      <Variable x:TypeArguments="x:String" Name="username" />
                      <Variable x:TypeArguments="ss:SecureString" Name="securePassword" />
                    </Sequence.Variables>
                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke GetAppCredentials workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Framework\GetAppCredentials.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <OutArgument x:TypeArguments="x:String" x:Key="out_Username">[username]</OutArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_Credential">[io_Config("OrchestratorCredentialName").ToString]</InArgument>
                        <OutArgument x:TypeArguments="ss:SecureString" x:Key="out_Password">[securePassword]</OutArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke GetAuthenticateToken workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Framework\Orchestrator\GetAuthenticateToken.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="x:String" x:Key="in_orchestratorURL">[io_Config("OrchestratorURL").ToString]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_tenancyName">[io_Config("OrchestratorTenancyName").ToString]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_usernameOrEmailAddress">[username]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_password">[new System.Net.NetworkCredential(string.Empty, securePassword).Password]</InArgument>
                        <OutArgument x:TypeArguments="x:String" x:Key="out_token">[token]</OutArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke GetQueueProcessingStatus workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="Framework\Orchestrator\Queues\GetQueueProcessingStatus.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="x:String" x:Key="in_orchestratorURL">[io_Config("OrchestratorURL").ToString]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_token">[token]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_queueName">[io_Config("OrchestratorQueueName").ToString]</InArgument>
                        <OutArgument x:TypeArguments="njl:JObject" x:Key="out_jsonQueueProcessingStatus">[jsonQueueProcessingStatus]</OutArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <If Condition="[string.Compare(jsonQueueProcessingStatus.Item(&quot;QueueDefinitionAcceptAutomaticallyRetry&quot;).ToString, &quot;true&quot;, true) = 0]" DisplayName="If Queue AutoRetry is enabled, MaxRetryNumber becomes the Queue Retry number" sap2010:WorkflowViewState.IdRef="If_48">
                      <If.Then>
                        <Assign DisplayName="Assign MaxRetryNumber" sap2010:WorkflowViewState.IdRef="Assign_117">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Object">[io_Config("MaxRetryNumber")]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Object">[jsonQueueProcessingStatus.Item("QueueDefinitionMaxNumberOfRetries")]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </If.Then>
                      <If.Else>
                        <Assign DisplayName="Assign MaxRetryNumber" sap2010:WorkflowViewState.IdRef="Assign_118">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Object">[io_Config("MaxRetryNumber")]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Object">[0]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </If.Else>
                    </If>
                  </Sequence>
                </TryCatch.Try>
                <TryCatch.Catches>
                  <Catch x:TypeArguments="ssa:AuthenticationException" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                    <ActivityAction x:TypeArguments="ssa:AuthenticationException">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="ssa:AuthenticationException" Name="exception" />
                      </ActivityAction.Argument>
                      <ui:LogMessage DisplayName="Log authentication error" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Error" Message="[&quot;Credentials not found: &quot;+exception.Message]" />
                    </ActivityAction>
                  </Catch>
                  <Catch x:TypeArguments="ui:OrchestratorHttpException" sap2010:WorkflowViewState.IdRef="Catch`1_2">
                    <ActivityAction x:TypeArguments="ui:OrchestratorHttpException">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="ui:OrchestratorHttpException" Name="exception" />
                      </ActivityAction.Argument>
                      <ui:LogMessage DisplayName="Log Orchestrator error" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Error" Message="[&quot;Orchestrator API encountered exception &quot;+exception.Message+&quot; at Source &quot; + exception.Source]" />
                    </ActivityAction>
                  </Catch>
                  <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_3">
                    <ActivityAction x:TypeArguments="s:Exception">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                      </ActivityAction.Argument>
                      <ui:LogMessage DisplayName="Log general error" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Error" Message="[&quot;Exception &quot;+exception.Message + &quot; at Source &quot;+exception.Source]" />
                    </ActivityAction>
                  </Catch>
                </TryCatch.Catches>
              </TryCatch>
            </If.Then>
          </If>
        </Sequence>
      </If.Then>
      <If.Else>
        <Assign DisplayName="Not a QueueItem" sap2010:WorkflowViewState.IdRef="Assign_122">
          <Assign.To>
            <OutArgument x:TypeArguments="x:Object">[io_SystemReserved.Item("isQueueItem")]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:Object">[false]</InArgument>
          </Assign.Value>
        </Assign>
      </If.Else>
    </If>
    <sads:DebugSymbol.Symbol>d3JDOlxVc2Vyc1xtaWhhaS5kdW5hcmVhbnVcR29vZ2xlIERyaXZlXFdvcmtzcGFjZVxVaVBhdGhcVGVtcGxhdGVzXFVpUGF0aF9SRUZyYW1ld29ya1xGcmFtZXdvcmtcR2V0UXVldWVSZXRyaWVzLnhhbWwxcQPrAQ4CAQFyBekBCgIBAnITcn4CAQN0Cd0BFAIBCOABCecBEgIBBHULfBQCAUN9C4QBFAIBP4UBC9wBEAIBCeUBNOUBOwIBB+IBNeIBXAIBBXo2ejwCAUZ3N3deAgFEggE2ggFSAgFCfzd/XgIBQIUBvQGFAYACAgEKhwEP2gEaAgEMiQETvgEeAgEWxgEXxgHOAQIBE84BF84BhwICARHWARfWAeUBAgENkAEVlgEtAgE3lwEVnwEtAgEroAEVpwEtAgEhqAEVvQEaAgEXxgGSAcYBywECARTOAZABzgGEAgIBEtYBiwHWAeIBAgEOlAFdlAFtAgE9kwFWkwGIAQIBO5IBVpIBYAIBOZABzgGQAfABAgE4mQFbmQGCAQIBNZ0BU50BWgIBM5sBYpsBbAIBMZwBVJwBnQECAS+aAVeaAYYBAgEtlwHRAZcBgwICASyiAVuiAYIBAgEpowFRowFYAgEnoAHVAaABkgICASakAVWkAYIBAgEkpQFqpQGFAQIBIqgBI6gBrwECARiqARmxASICAR20ARm7ASICARmvAUSvAYkBAgEgrAFFrAFiAgEeuQFEuQFHAgEctgFFtgFiAgEa</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="Assign_121" sap:VirtualizedContainerService.HintSize="539,60" />
      <sap2010:ViewStateData Id="Assign_120" sap:VirtualizedContainerService.HintSize="539,60" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_1" sap:VirtualizedContainerService.HintSize="509,87" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_2" sap:VirtualizedContainerService.HintSize="509,87" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_3" sap:VirtualizedContainerService.HintSize="509,87" />
      <sap2010:ViewStateData Id="Assign_117" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_118" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_48" sap:VirtualizedContainerService.HintSize="509,208">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_302" sap:VirtualizedContainerService.HintSize="531,713">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_1" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Catch`1_1" sap:VirtualizedContainerService.HintSize="400,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_2" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Catch`1_2" sap:VirtualizedContainerService.HintSize="400,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_3" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Catch`1_3" sap:VirtualizedContainerService.HintSize="400,160">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_1" sap:VirtualizedContainerService.HintSize="414,366" />
      <sap2010:ViewStateData Id="If_50" sap:VirtualizedContainerService.HintSize="539,556">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_305" sap:VirtualizedContainerService.HintSize="561,880">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_122" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_49" sap:VirtualizedContainerService.HintSize="828,1028">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_304" sap:VirtualizedContainerService.HintSize="850,1179">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="isQueueItem_1" sap:VirtualizedContainerService.HintSize="890,1259" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>